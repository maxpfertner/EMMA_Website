<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r | EMMA</title>
    <link>/tags/r/</link>
      <atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <description>r</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 26 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>r</title>
      <link>/tags/r/</link>
    </image>
    
    <item>
      <title>Temporal accessibility of workplaces by time of day</title>
      <link>/post/changes-in-accessibility-during-a-workday/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/changes-in-accessibility-during-a-workday/</guid>
      <description>&lt;p&gt;The release of the 
&lt;a href=&#34;https://www.opendata-oepnv.de/ht/de/willkommen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official nation-wide GTFS dataset for Germany&lt;/a&gt; has been a game changer for all kinds of public transport analysis recently. Within EMMA, we use a filtered version of this dataset for the region in OpenTripPlanner. The timetable-based accuracy of the data allows a very detailed look at the changes in accessibility over time due to variations in the public transport supply. We would like to illustrate this using TUM&amp;rsquo;s main campus in the center of Munich and the Garching Campus, which is north of the City, connected with a subway line.&lt;/p&gt;















&lt;figure id=&#34;figure-tum-stammgelänge-in-maxvorstadt&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;/post/img/2020-06-26_stammgelaende.gif&#34; data-caption=&#34;TUM Stammgelänge in Maxvorstadt&#34;&gt;


  &lt;img src=&#34;/post/img/2020-06-26_stammgelaende.gif&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    TUM Stammgelänge in Maxvorstadt
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;The blue isochrones show the area from where you could reach the TUM campus within 30 minute with public transport at the given time of day (on a Wednesday). You can see some headway-related flickering during the day, but between the early morning until the late evening, the area is relatively stable. A dense network of multiple public transport lines, from buses, to trams, subways, and regional trains (&amp;ldquo;S-Bahn&amp;rdquo;) ensures a good accessibility of this location during most of the day. 
How does a similar map look for the example of Garching?&lt;/p&gt;















&lt;figure id=&#34;figure-tum-campus-garching-hochbrück&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;/post/img/2020-06-26_garching.gif&#34; data-caption=&#34;TUM Campus Garching-Hochbrück&#34;&gt;


  &lt;img src=&#34;/post/img/2020-06-26_garching.gif&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    TUM Campus Garching-Hochbrück
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;As you might have expected, the isochrones are generally smaller, and much more narrow shaped along the North-South corridor. This is where the subway runs, the dominating public transport supply in the area. The effect of some bus lines is visible with the &amp;ldquo;islands&amp;rdquo; that appear on the map from time to time. Interestingly, there are some periods at night where there is no public transport on the campus at all.&lt;/p&gt;
&lt;h3 id=&#34;how-can-we-quantify-and-visualize-these-results&#34;&gt;How can we quantify and visualize these results?&lt;/h3&gt;
&lt;p&gt;The following graph shows the number of people who can reach the locations by time of day - again within 30 minutes of public transport (and a max. walk distance of 800m).&lt;/p&gt;















&lt;figure id=&#34;figure-comparison-of-both-locations&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;/post/img/2020-06-26_graph.png&#34; data-caption=&#34;Comparison of both locations&#34;&gt;


  &lt;img src=&#34;/post/img/2020-06-26_graph.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Comparison of both locations
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;The striking difference in absolute numbers is not unexpected, given the locations. Some observations beyond this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The night shutdown from 2:00 - 5:00 is affecting Garching more than the main campus, where some supply is available 24/7.&lt;/li&gt;
&lt;li&gt;You can identify (in the main campus mainly) the increased supply during the peak hours (roughly 7:00- 9:00  and 16:00 - 19:00)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-does-this-imply-for-workplace-locations&#34;&gt;What does this imply for workplace locations?&lt;/h3&gt;
&lt;p&gt;First, one has to understand that on the Garching Campus, there are mainly university buildings and other research institutions, but no housing at all. Thus, effects like the complete shutdown of public transport at night does not have a negative impact on this location at the moment. However, it does show that in the case of structural changes to the locations, adaptions will be necessary.&lt;br&gt;
Within EMMA, we can repeat a similar analysis in more depth e.g. for workplace locations, where a 24/7 accessibility is important (such as hospitals, factories with night shifts, &amp;hellip;) and generate recommendations for the further development.&lt;br&gt;
&lt;em&gt;Stay tuned!&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-did-we-do-this&#34;&gt;How did we do this?&lt;/h3&gt;
&lt;p&gt;This analysis has been done in an R Script with roughly the following steps:&lt;/p&gt;
&lt;p&gt;Create a new dataframe and add a row for each departure (or arrival) time you want in your analysis. This is easily done with 
the 
&lt;a href=&#34;https://marcinstepniak.eu/post/departuretime-r-package/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;{DepartureTime} R package by Marcin Stępniak&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;library(DepartureTime)
isochrones &amp;lt;- DepartureTime(
  method = &amp;quot;S&amp;quot;,
  dy = 2020,
  dm = 7,
  dd = 15,
  tmin = 0,
  tmax = 24,
  res = params$res,
  MMDD = TRUE,
  ptw = FALSE
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, we added the isochrone (generated by OpenTripPlanner) for the location of interest as a new column to the dataframe.
We did this with a simple &lt;em&gt;for-loop&lt;/em&gt;, which called a custom-made &lt;em&gt;get_isochrone_sf&lt;/em&gt; function for each departure time we defined in the previous step. You could do this more easily with the help of 
&lt;a href=&#34;https://github.com/marcusyoung/otpr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Marcus Young&amp;rsquo;s &lt;em&gt;otpr&lt;/em&gt; R package&lt;/a&gt;.
The &lt;em&gt;st_buffer(dist = 0)&lt;/em&gt; helps us to make sure the polygons pass all validity checks by buffering with zero distance.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;isochrones &amp;lt;- isochrones %&amp;gt;% mutate(geometry = NA) #prepare empty column in df
# loop through departure times and calculate Isochrone for each
for (ID in (0:(nrow(isochrones)))) {
  iso &amp;lt;- get_isochrone_sf(params$lat, params$lng, &amp;quot;TRANSIT, WALK&amp;quot;, params$date, isochrones$time[ID],
                          800, 1, TRUE, 30) %&amp;gt;% st_buffer(dist = 0)
  isochrones$geometry[ID] &amp;lt;- iso$geometry # save in column &amp;quot;geometry&amp;quot;
  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To make it an actual &lt;em&gt;sf&lt;/em&gt; object and fix some other issues like the correct CRS, we used the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# Turn it into an sf object with the correct CRS info

isochrones &amp;lt;- isochrones %&amp;gt;%  st_sf() # make sf object
isochrones &amp;lt;- isochrones %&amp;gt;% st_cast(&amp;quot;MULTIPOLYGON&amp;quot;) # cast as multipolygon
isochrones &amp;lt;- isochrones %&amp;gt;% st_set_crs(4326) # set CRS

isochrones &amp;lt;- isochrones %&amp;gt;% mutate(area = st_area(st_transform(geometry, 3857)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final step is to create a map and animate it. In this example, we use a combination of 
&lt;a href=&#34;https://github.com/dkahle/ggmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggmap&lt;/a&gt;, which is based on 
&lt;a href=&#34;https://ggplot2.tidyverse.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ggplot2&lt;/a&gt;,for the mapping and 
&lt;a href=&#34;https://github.com/thomasp85/gganimate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gganimate&lt;/a&gt; for the animation.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# Map and animate

bbox &amp;lt;- c(11.413111,48.05974,11.718668,48.223315) # define base map extent
muc_basemap &amp;lt;- get_stamenmap(c(bbox[1], bbox[2], bbox[3], bbox[4]), zoom = 13, maptype = &amp;quot;toner-lite&amp;quot;) #get basemap

anim &amp;lt;- ggmap(muc_basemap) +
  coord_sf(crs = st_crs(3857)) + # force the ggplot2 map to be in EPSG 3857
  geom_sf(data = isochrones, inherit.aes = FALSE, fill = &amp;quot;#0065BD&amp;quot;, alpha = .5) + #add isochrones
  geom_point(aes(x = 11.5681012114146 , y = 48.1500453494002), size = 4, # add point for TUM location
             shape = 21, fill = &amp;quot;#0065BD&amp;quot;) +
  labs(title = &amp;quot;TUM Main Campus: PT Accessibility at {current_frame} on a weekday&amp;quot;,
       subtitle = &amp;quot;30-min public transport isochrone with a max. walking distance of 800m&amp;quot;) +
  transition_manual(time) # this is where the animation magic happens

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To export the animation, either just save the Viewer() manually or use the export function as mp4 or gif.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# high quality
animate(anim, fps = 4, height = 1200, width = 1400, res = 230)

#low quality for testing
animate(anim, fps = 4, height = 400, width = 600, res = 100)

# save as MP4 for linkedin
b &amp;lt;- animate(anim, duration = 14, height = 2800, width = 3200, res = 600, renderer = av_renderer())
anim_save(&amp;quot;output2.mp4&amp;quot;, b)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
